var NOT_COLLISION=-10;
var COLLISION=-1;

var map=new Array();
map[0]=[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4];
map[1]=[4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4];
map[2]=[4,-1,3,3,0,-1,2,2,0,0,2,-1,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,3,4];
map[3]=[4,-1,0,0,0,-1,0,0,0,0,2,-1,0,3,3,3,0,-1,0,0,0,0,0,-1,0,0,0,-1,4];
map[4]=[4,-1,3,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,3,-1,-1,-1,-1,-1,4];
map[5]=[4,-1,0,2,2,-1,0,0,0,-1,0,0,0,0,0,0,0,1,0,-1,0,0,0,-1,1,1,0,-1,4];
map[6]=[4,-1,0,0,0,-1,0,0,0,-1,0,2,2,3,3,3,2,1,1,-1,0,0,0,-1,1,3,0,-1,4];
map[7]=[4,-1,-1,-1,2,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,4];
map[8]=[4,0,0,0,0,2,2,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,-1,0,0,0,0,4];
map[9]=[4,0,0,0,0,2,0,-1,0,0,-1,1,1,-1,0,-1,0,0,-1,0,0,-1,0,-1,0,0,0,0,4];
map[10]=[4,0,0,0,0,2,0,-1,0,0,-1,1,1,-1,-1,-1,0,0,-1,0,0,-1,0,-1,0,0,0,0,4];
map[11]=[4,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,2,2,2,-1,-1,-1,-1,-1,-1,4];
map[12]=[4,0,0,0,0,2,0,-1,0,0,-1,2,2,-1,-1,-1,0,0,-1,0,0,-1,0,-1,0,2,0,0,4];
map[13]=[4,0,0,1,1,2,0,-1,0,0,-1,2,2,-1,0,-1,2,0,-1,1,1,-1,0,-1,0,0,2,0,4];
map[14]=[4,0,0,1,1,2,0,-1,-1,-1,-1,-1,-1,-1,2,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,4];
map[15]=[4,0,0,2,2,2,0,-1,0,0,0,0,0,1,0,0,0,1,0,0,0,-1,-1,-1,1,0,0,0,4];
map[16]=[4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4];
map[17]=[4,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,4];
map[18]=[4,0,0,-1,0,-1,0,-1,0,2,2,0,0,0,0,0,0,2,2,0,0,-1,0,-1,1,-1,0,0,4];
map[19]=[4,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,4];
map[20]=[4,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,2,0,0,0,0,0,0,0,1,3,-1,4];
map[21]=[4,-1,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-1,2,0,0,0,0,0,0,0,0,3,-1,4];
map[22]=[4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4];
map[23]=[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4];

function getMapCanGo(x,y,map) {
    var dists=new Array();
    if(map[y-1][x]!=0&&map[y-1][x]!=1&&map[y-1][x]!=3&&map[y-1][x]!=4)
        dists.push(UP);
    if(map[y][x-1]!=0&&map[y][x-1]!=1&&map[y][x-1]!=3&&map[y][x-1]!=4)
        dists.push(LEFT);
    if(map[y][x+1]!=0&&map[y][x+1]!=1&&map[y][x+1]!=3&&map[y][x+1]!=4)
        dists.push(RIGHT);
    if(map[y+1][x]!=0&&map[y+1][x]!=1&&map[y+1][x]!=3&&map[y+1][x]!=4)
        dists.push(DOWN);
    return dists;
}

var coll_map=new Array(map.length);
function initCollMap() {
    for(var i=0;i<map.length;i++) {
        coll_map[i]=new Array(map[0].length);
        for(var j=0;j<map[0].length;j++)
            coll_map[i][j]=NOT_COLLISION;
    }
}

function getColl(x,y) {
    coll_map[y][x]=COLLISION;
}
function getIdColl(id,x,y) {
    coll_map[y][x]=id;
}
function releaseColl(x,y) {
    coll_map[y][x]=NOT_COLLISION;
}
function getCollision(x,y) {
    return coll_map[y][x];
}